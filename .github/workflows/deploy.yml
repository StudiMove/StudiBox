name: CI/CD Deployment to Production

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
    # Étape 1: Checkout du code source
    - name: Checkout Code
      uses: actions/checkout@v3

    # Étape 2: Configuration de SSH
    - name: Setup SSH for Deployment
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        port: ${{ secrets.DEPLOY_PORT }}

    # Étape 3: Créer le dossier ~/.ssh et ajouter l'hôte à known_hosts
    - name: Add Server to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

    # Étape 4: Vérification de l'accès SSH
    - name: Debug SSH Connection
      run: |
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "echo 'Connexion réussie'"


    # Étape 5: Déploiement en Production
    - name: Deploy to Production
      run: |
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "Déploiement en production sur ${{ secrets.DEPLOY_HOST }}..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
        cd /home/debian/projects/StudyBox
        echo "Passage sur la branche main..."
        git fetch origin
        git checkout main
        echo "Mise à jour du code source depuis Git..."
        git pull origin main
        echo "Mise à jour des images Docker..."
        docker-compose -f docker-compose.prod.yml pull
        echo "Redémarrage des services Docker..."
        docker-compose -f docker-compose.prod.yml up -d --remove-orphans
        EOF
