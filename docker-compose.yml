version: "3.8"

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - studymovenetwork
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h db || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SERVER_PORT: ${SERVER_PORT}
      API_BASE_URL: ${API_BASE_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET: ${S3_BUCKET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
      JWT_SECRET_ACCESS_KEY: ${JWT_SECRET_ACCESS_KEY}
      FIREBASE_CREDENTIALS_PATH: /app/config/firebase-adminsdk.json
    volumes:
      - ./.env:/app/.env
      - ./backend/config/firebase-adminsdk.json:/app/config/firebase-adminsdk.json
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - studymovenetwork

  frontend:
    build:
      context: ./frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    networks:
      - studymovenetwork

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      CSRF_PROTECT: "False"
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - studymovenetwork

  smtp:
    build:
      context: ./SMTP
    ports:
      - "25:25"
    environment:
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    networks:
      - studymovenetwork

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - studymovenetwork

  swagger:
    build:
      context: ./Documentation
    ports:
      - "8081:80"
    networks:
      - studymovenetwork

volumes:
  db_data:

networks:
  studymovenetwork:
    driver: bridge
